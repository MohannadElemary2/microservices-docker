version: "3.9"
volumes:
  php-fpm-socket:
  db-store:
  psysh-store:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local

networks:
  app-tier:
    driver: bridge

services:
  registration:
    build:
      context: .
      dockerfile: ./infra/docker/php/Dockerfile
    networks:
      - app-tier
    volumes:
      - type: volume
        source: php-fpm-socket
        target: /var/run/php-fpm
        volume:
          nocopy: true
      - type: bind
        source: ./backend/registration
        target: /work/backend
      - type: volume
        source: psysh-store
        target: /root/.config/psysh
        volume:
          nocopy: true
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=${DB_NAME:-laravel_local}
      - DB_USERNAME=${DB_USER:-phper}
      - DB_PASSWORD=${DB_PASS:-secret}

  web:
    build:
      context: .
      dockerfile: ./infra/docker/nginx/Dockerfile
    networks:
      - app-tier
    ports:
      - target: 80
        published: ${WEB_PORT:-80}
        protocol: tcp
        mode: host
    volumes:
      - type: volume
        source: php-fpm-socket
        target: /var/run/php-fpm
        volume:
          nocopy: true
      - type: bind
        source: ./backend/registration
        target: /work/backend

  db:
    build:
      context: .
      dockerfile: ./infra/docker/mysql/Dockerfile
    networks:
      - app-tier
    ports:
      - target: 3306
        published: ${DB_PORT:-3306}
        protocol: tcp
        mode: host
    volumes:
      - type: volume
        source: db-store
        target: /var/lib/mysql
        volume:
          nocopy: true
    environment:
      - MYSQL_DATABASE=${DB_NAME:-laravel_local}
      - MYSQL_USER=${DB_USER:-phper}
      - MYSQL_PASSWORD=${DB_PASS:-secret}
      - MYSQL_ROOT_PASSWORD=${DB_PASS:-secret}

  zookeeper:
    image: docker.io/bitnami/zookeeper:3.7
    networks:
      - app-tier
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: docker.io/bitnami/kafka:3
    networks:
      - app-tier
    ports:
      - "9092:9092"
      - "9093:9093"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      - zookeeper

  kafka-topics-creator:
    image: confluentinc/cp-kafka:latest
    networks:
      - app-tier
    container_name: kafka-topics-creator
    depends_on:
      - zookeeper
      - kafka
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                       kafka-topics --create --topic email-notifications --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1
                       echo done'"

    environment:
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored
      
  mongo:
    image: mongo
    networks:
      - app-tier
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - .:/mognodb
    
  notifications:
    build:
      context: .
      dockerfile: ./infra/docker/python/Dockerfile
    networks:
      - app-tier
    volumes:
      - type: bind
        source: ./backend/notification
        target: /code
    ports:
      - "8001:8001"
    depends_on:
      - mongo
    command: bash -c "sleep 30 && python manage.py migrate && python manage.py run_consumer"
